{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ankitsrivastava/Desktop/react/rich-todo/src/containers/App/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { ImCross, ImAttachment, ImCalendar } from \"react-icons/im\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TasksList from \"../../components/TasksList\";\nimport UserProfile from \"../../components/UserProfile\";\nimport tasksData from \"../../data/tasks\";\nimport Context from \"../../Context/Context\"; // const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(tasksData);\n  const [newtask, setNewtask] = useState(\"\");\n\n  const addNewTask = e => {\n    setNewtask(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setTasks([...tasks, {\n      title: newtask,\n      due: 1597017600\n    }]);\n    setNewtask(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      allTasks: tasks,\n      task: setNewtask\n    },\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: props.location.pathname === \"/add\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"closeIcon\",\n          children: /*#__PURE__*/_jsxDEV(ImCross, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inputBox\",\n              type: \"text\",\n              placeholder: \"What would you like to add ?\",\n              onChange: e => addNewTask(e),\n              value: newtask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            fluid: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attachments float-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"attachIcons\",\n                children: /*#__PURE__*/_jsxDEV(ImAttachment, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(ImCalendar, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addTaskBtn\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n          taskCount: tasks.length,\n          profile: {\n            name: 'Floyd Mullins'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6Nq82sBK5FCVRkXN3q7vK3Nxtos=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/rich-todo/src/containers/App/index.js"],"names":["React","Fragment","useState","Container","Row","ImCross","ImAttachment","ImCalendar","TasksList","UserProfile","tasksData","Context","App","props","tasks","setTasks","newtask","setNewtask","addNewTask","e","target","value","submitHandler","preventDefault","title","due","allTasks","task","location","pathname","length","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, } from \"react\";\nimport {Container, Row} from \"reactstrap\"\nimport {ImCross,ImAttachment,ImCalendar} from \"react-icons/im\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport TasksList from \"../../components/TasksList\";\nimport UserProfile from \"../../components/UserProfile\";\nimport tasksData from \"../../data/tasks\";\nimport Context from \"../../Context/Context\"\n\n// const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\n\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(tasksData);\n  const [newtask,setNewtask] = useState(\"\");\n\n  const addNewTask = (e) => {\n    setNewtask(e.target.value)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    setTasks([...tasks,{title:newtask,due:1597017600}]);\n    setNewtask(\"\")\n  }\n  \n\n  return (\n    <Context.Provider value={{\n      allTasks:tasks,\n      task:setNewtask\n    }}>\n      <Fragment>\n      \n      { \n        props.location.pathname === \"/add\" ? (\n          <div className=\"search\">\n            <span id=\"closeIcon\"><ImCross /></span>\n          \n            <form onSubmit={submitHandler}>\n            <Container fluid>\n              <input className=\"inputBox\" type=\"text\" placeholder=\"What would you like to add ?\" onChange={(e) => addNewTask(e)} value={newtask} />\n              </Container>\n              <Container fluid>\n              <div className=\"attachments float-right\">\n                <span className=\"attachIcons\"><ImAttachment /></span><span><ImCalendar/></span>\n              </div></Container>\n              <button className=\"addTaskBtn\">+</button>\n            </form>\n        \n        </div>\n        ) : (\n          <div className=\"App\">\n            <UserProfile taskCount={tasks.length} profile={{ name: 'Floyd Mullins' }} />\n            <TasksList tasks={tasks} />\n          </div>\n        )\n        \n      }\n        \n  </Fragment>\n</Context.Provider>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}