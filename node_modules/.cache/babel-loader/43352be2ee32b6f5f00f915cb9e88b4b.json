{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ankitsrivastava/Desktop/react/rich-todo/src/containers/App/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { ImCross, ImAttachment, ImCalendar } from \"react-icons/im\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TasksList from \"../../components/TasksList\";\nimport UserProfile from \"../../components/UserProfile\";\nimport tasksData from \"../../data/tasks\"; // const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(tasksData);\n  const [newtask, setNewtask] = useState(\"\");\n  const [status, setStatus] = useState(\"/\");\n  const {\n    param\n  } = useParams(\"param\");\n  const history = useHistory();\n  useEffect(() => {\n    setNewtask(param);\n  }, [param]);\n\n  const addNewTask = e => {\n    setNewtask(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setTasks([...tasks, {\n      title: newtask,\n      due: 1597017600\n    }]);\n    setNewtask(\"\");\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: param === \"add\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"closeIcon\",\n        children: /*#__PURE__*/_jsxDEV(ImCross, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputBox\",\n            type: \"text\",\n            placeholder: \"What would you like to add ?\",\n            onChange: e => addNewTask(e),\n            value: newtask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attachments float-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"attachIcons\",\n              children: /*#__PURE__*/_jsxDEV(ImAttachment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(ImCalendar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 76\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addTaskBtn\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n        taskCount: tasks.length,\n        profile: {\n          name: 'Floyd Mullins'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"xRp4o3ud6ETJWbP1nokwJXrku7w=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/rich-todo/src/containers/App/index.js"],"names":["React","Fragment","useEffect","useState","Container","useParams","useHistory","ImCross","ImAttachment","ImCalendar","TasksList","UserProfile","tasksData","App","props","tasks","setTasks","newtask","setNewtask","status","setStatus","param","history","addNewTask","e","target","value","submitHandler","preventDefault","title","due","push","length","name"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, } from \"react\";\nimport {Container} from \"reactstrap\"\nimport { useParams,useHistory } from 'react-router-dom'\nimport {ImCross,ImAttachment,ImCalendar} from \"react-icons/im\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport TasksList from \"../../components/TasksList\";\nimport UserProfile from \"../../components/UserProfile\";\nimport tasksData from \"../../data/tasks\";\n\n// const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\n\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(tasksData);\n  const [newtask,setNewtask] = useState(\"\");\n  const [status,setStatus] = useState(\"/\");\n  const { param } = useParams(\"param\")\n  const history = useHistory()\n  \nuseEffect(()=>{\n  setNewtask(param)\n},[param])\n\n\n  const addNewTask = (e) => {\n    setNewtask(e.target.value)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    setTasks([...tasks,{title:newtask,due:1597017600}]);\n    setNewtask(\"\")\n    history.push(\"/\")\n  }\n  \n\n  return (\n      <Fragment>\n      \n      { \n        param === \"add\" ? (\n          <div className=\"search\">\n            <span id=\"closeIcon\"><ImCross /></span>\n          \n            <form onSubmit={submitHandler}>\n            <Container fluid>\n              <input className=\"inputBox\" type=\"text\" placeholder=\"What would you like to add ?\" onChange={(e) => addNewTask(e)} value={newtask} />\n              </Container>\n              <Container fluid>\n              <div className=\"attachments float-right\">\n                <span className=\"attachIcons\"><ImAttachment /></span><span><ImCalendar/></span>\n              </div></Container>\n              <button className=\"addTaskBtn\">+</button>\n            </form>\n        \n        </div>\n        ) : (\n          <div className=\"App\">\n            <UserProfile taskCount={tasks.length} profile={{ name: 'Floyd Mullins' }} />\n            <TasksList tasks={tasks} />\n          </div>\n        )\n        \n      }\n        \n  </Fragment>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}