{"ast":null,"code":"import _toConsumableArray from\"/Users/ankitsrivastava/Desktop/react/rich-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/ankitsrivastava/Desktop/react/rich-todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Fragment,useState}from\"react\";import{Container,Row}from\"reactstrap\";import\"bootstrap/dist/css/bootstrap.min.css\";import TasksList from\"../../components/TasksList\";import UserProfile from\"../../components/UserProfile\";import tasksData from\"../../data/tasks\";// const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\nfunction App(props){var _useState=useState(tasksData),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newtask=_useState4[0],setNewTask=_useState4[1];var addNewTask=function addNewTask(e){setNewTask(e.target.value);};var submitHandler=function submitHandler(e){e.preventDefault();setTasks([].concat(_toConsumableArray(tasks),[{title:newtask,due:1597017600}]));setNewTask(\"\");};return/*#__PURE__*/_jsxs(Fragment,{children:[0?/*#__PURE__*/_jsx(\"div\",{className:\"search\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(Container,{fluid:true,children:/*#__PURE__*/_jsx(\"input\",{className:\"inputBox\",type:\"text\",placeholder:\"What would you like to add ?\",onChange:function onChange(e){return addNewTask(e);},value:newtask})}),/*#__PURE__*/_jsx(\"button\",{className:\"addTaskBtn\",children:\"+\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(UserProfile,{taskCount:tasks.length,profile:{name:'Floyd Mullins'}}),/*#__PURE__*/_jsx(TasksList,{tasks:tasks})]}),console.log(props.location.pathname)]});}export default App;","map":{"version":3,"sources":["/Users/ankitsrivastava/Desktop/react/rich-todo/src/containers/App/index.js"],"names":["React","Fragment","useState","Container","Row","TasksList","UserProfile","tasksData","App","props","tasks","setTasks","newtask","setNewTask","addNewTask","e","target","value","submitHandler","preventDefault","title","due","length","name","console","log","location","pathname"],"mappings":"0aAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,OAAQC,SAAR,CAAmBC,GAAnB,KAA6B,YAA7B,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CAEA;AAIA,QAASC,CAAAA,GAAT,CAAaC,KAAb,CAAoB,eACQP,QAAQ,CAACK,SAAD,CADhB,wCACXG,KADW,eACJC,QADI,8BAEWT,QAAQ,CAAC,EAAD,CAFnB,yCAEXU,OAFW,eAEHC,UAFG,eAIlB,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACxBF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CACD,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACH,CAAD,CAAO,CAC3BA,CAAC,CAACI,cAAF,GACAR,QAAQ,8BAAKD,KAAL,GAAW,CAACU,KAAK,CAACR,OAAP,CAAeS,GAAG,CAAC,UAAnB,CAAX,GAAR,CACAR,UAAU,CAAC,EAAD,CAAV,CACD,CAJD,CAOA,mBACI,MAAC,QAAD,YAGE,eACE,YAAK,SAAS,CAAC,QAAf,uBAEE,cAAM,QAAQ,CAAEK,aAAhB,wBACA,KAAC,SAAD,EAAW,KAAK,KAAhB,uBACE,cAAO,SAAS,CAAC,UAAjB,CAA4B,IAAI,CAAC,MAAjC,CAAwC,WAAW,CAAC,8BAApD,CAAmF,QAAQ,CAAE,kBAACH,CAAD,QAAOD,CAAAA,UAAU,CAACC,CAAD,CAAjB,EAA7F,CAAmH,KAAK,CAAEH,OAA1H,EADF,EADA,cAIE,eAAQ,SAAS,CAAC,YAAlB,eAJF,GAFF,EADF,cAYE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,WAAD,EAAa,SAAS,CAAEF,KAAK,CAACY,MAA9B,CAAsC,OAAO,CAAE,CAAEC,IAAI,CAAE,eAAR,CAA/C,EADF,cAEE,KAAC,SAAD,EAAW,KAAK,CAAEb,KAAlB,EAFF,GAfJ,CAyBCc,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACiB,QAAN,CAAeC,QAA3B,CAzBD,GADJ,CA+BD,CAED,cAAenB,CAAAA,GAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport {Container, Row} from \"reactstrap\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport TasksList from \"../../components/TasksList\";\nimport UserProfile from \"../../components/UserProfile\";\nimport tasksData from \"../../data/tasks\";\n\n// const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\n\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(tasksData);\n  const [newtask,setNewTask] = useState(\"\");\n\n  const addNewTask = (e) => {\n    setNewTask(e.target.value)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    setTasks([...tasks,{title:newtask,due:1597017600}]);\n    setNewTask(\"\")\n  }\n  \n\n  return (\n      <Fragment>\n      \n      { \n        0 ? (\n          <div className=\"search\">\n          \n            <form onSubmit={submitHandler}>\n            <Container fluid>\n              <input className=\"inputBox\" type=\"text\" placeholder=\"What would you like to add ?\" onChange={(e) => addNewTask(e)} value={newtask} />\n              </Container>\n              <button className=\"addTaskBtn\">+</button>\n            </form>\n        \n        </div>\n        ) : (\n          <div className=\"App\">\n            <UserProfile taskCount={tasks.length} profile={{ name: 'Floyd Mullins' }} />\n            <TasksList tasks={tasks} />\n          </div>\n        )\n        \n      }\n    \n        \n\n      {console.log(props.location.pathname)}\n        \n  </Fragment>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}