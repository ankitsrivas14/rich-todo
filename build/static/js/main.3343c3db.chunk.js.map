{"version":3,"sources":["components/DropButton/index.js","utils/index.js","components/Task/index.js","components/TasksList/index.js","components/UserProfile/index.js","data/tasks.js","containers/App/index.js","reportWebVitals.js","index.js"],"names":["DropButton","React","forwardRef","props","ref","onClick","console","log","status","className","months","formatDueDate","timestamp","date","Date","getDay","getMonth","getDate","Task","task","onMouseDown","onMouseUp","onTouchStartCapture","onTouchEnd","draggable","title","due","TasksList","tasks","useState","selectedNode","setSelectedNode","isDragging","setIsDragging","containerRef","useRef","dropButtonRef","mouseDownY","setMouseDownY","e","currentTarget","pageY","changedTouches","style","zIndex","document","body","overflow","onMouseMove","top","transform","dist","current","offsetTop","offsetHeight","delta","Math","max","scale","onTouchMove","map","i","UserProfile","profile","taskCount","name","src","App","tasksData","setTasks","newtask","setNewtask","setStatus","history","useParams","param","useHistory","useEffect","id","onSubmit","preventDefault","push","Container","fluid","type","placeholder","onChange","target","value","addNewTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","routing","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3343c3db.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect, useHistory } from 'react-router-dom'\nimport {Link,BrowserRouter as Router} from \"react-router-dom\"\n\nconst DropButton = React.forwardRef((props, ref) => {\n  \n  const handleStatus = () => {\n    console.log(\"Hey\")\n    props.status()\n  }\n  \n  return (\n    <Router>\n      <div onClick={handleStatus} ref={ref} className={`drop-button ${props.className}`}>+</div>\n    </Router>\n  )\n});\n\nexport default DropButton;\n","\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nexport const formatDueDate = (timestamp) => {\n  const date = new Date(timestamp);\n  return `${date.getDay()} ${months[date.getMonth()]} ${date.getDate()}`;\n}","import React from 'react';\nimport { formatDueDate } from \"../../utils\";\n\nconst Task = ({ task, onMouseDown, onMouseUp }) => {\n  return (\n    task ?\n      (\n        <div className={`task-item ${task.status ? task.status : ''}`}\n          onMouseDown={onMouseDown}\n          onMouseUp={onMouseUp}\n          onTouchStartCapture={onMouseDown}\n          onTouchEnd={onMouseUp}\n          draggable\n        >\n          <h3>{task.title}</h3>\n          <p>Due {formatDueDate(task.due * 1000)}</p>\n        </div>\n      )\n      : null\n  )\n}\n\nexport default Task;","import { useRef, useState } from \"react\";\nimport DropButton from \"../DropButton\";\nimport Task from \"../Task\";\n\nconst TasksList = ({ tasks,status}) => {\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const containerRef = useRef(null);\n  const dropButtonRef = useRef(null);\n  const [mouseDownY, setMouseDownY] = useState(0);\n\n  const onMouseDown = (e) => {\n    setIsDragging(true);\n    setSelectedNode(e.currentTarget);\n    setMouseDownY(e.pageY || (e.changedTouches[0] && e.changedTouches[0].pageY));\n    e.currentTarget.style.zIndex = 1000;\n    document.body.style.overflow = 'hidden';\n  }\n  const onMouseMove = (e) => {\n    const top = (e.pageY || e.changedTouches[0] && e.changedTouches[0].pageY) - mouseDownY;\n    if (isDragging & top >= 0) {\n      selectedNode.style.transform = `translate3d(0,${top}px,0)`;\n      const dist = dropButtonRef.current.offsetTop - selectedNode.offsetTop - top - selectedNode.offsetHeight;\n      if (dist < 300) {\n        const delta = (1 - (Math.max(300 - dist, 0) / 300 * 0.9));\n        const scale = Math.max(delta, 0.3);\n        selectedNode.style.transform += `scale3d(${scale},${scale},${scale})`;\n      }\n    }\n  }\n  const onMouseUp = (e) => {\n    setIsDragging(false);\n    e.currentTarget.style.zIndex = 0;\n    selectedNode.style.transform = `translate3d(0,0,0)`;\n    document.body.style.overflow = 'auto';\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"task-list-container\"\n      onMouseMove={onMouseMove}\n      onTouchMove={onMouseMove}\n    >\n      <div className={`tasks-list ${isDragging ? 'disabled' : ''}`}>\n        {tasks.map((task, i) => (\n          <Task\n            key={i}\n            task={task}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n          />\n        ))}\n      </div>\n      <DropButton status={status} ref={dropButtonRef} className={`${isDragging ? 'active' : ''}`} />\n    </div>\n  )\n}\n\nexport default TasksList;\n","const UserProfile = ({ profile, taskCount }) => {\n  return (\n    <div className=\"user-profile\">\n      <div className=\"user-name\">\n        <h2><span>Hello</span> <span>{profile.name}</span></h2>\n        <p>You have {taskCount} tasks</p>\n      </div>\n      <img src=\"img/user-pic.jpg\" />\n    </div>\n  )\n}\n\nexport default UserProfile;\n","export default [\n  {\n    title: 'Complete ten push-ups',\n    due: 1596844800,\n  },\n  {\n    title: 'Interview scheduled for Mike',\n    due: 1597017600,\n  },\n  {\n    title: 'Meeting',\n    due: 1597017600,\n  },\n  {\n    title: \"Party at Jason's house\",\n    due: 1597104000,\n    status: 'done'\n  },\n  {\n    title: 'Complete ten push-ups',\n    due: 1596844800,\n  }\n];\n","import React, { Fragment, useEffect, useState, } from \"react\";\nimport {Container} from \"reactstrap\"\nimport { useParams,useHistory } from 'react-router-dom'\nimport {ImCross,ImAttachment,ImCalendar} from \"react-icons/im\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport TasksList from \"../../components/TasksList\";\nimport UserProfile from \"../../components/UserProfile\";\nimport tasksData from \"../../data/tasks\";\n\n// const DragImage = React.forwardRef((props, ref) => <TaskDragImage innerRef={ref} {...props} />);\n\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(tasksData);\n  const [newtask,setNewtask] = useState(\"\");\n  const [status,setStatus] = useState(\"/\");\n  const { param } = useParams(\"param\")\n  const history = useHistory()\n  \nuseEffect(()=>{\n  setStatus(\"/\")\n},[])\n\nconst handleStatus = () =>{\n  setStatus(\"add\")\n}\n\nconst handleBack = () =>{\n  setStatus(\"/\")\n}\n\n  const addNewTask = (e) => {\n    setNewtask(e.target.value)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if(newtask !== \"\")\n    setTasks([...tasks,{title:newtask,due:1597017600}]);\n    setNewtask(\"\")\n    setStatus(\"/\")\n    history.push(\"/\")\n  }\n  \n\n  return (\n      <Fragment>\n      \n      { \n        status === \"add\" ? (\n          <div className=\"search\">\n            <span onClick={handleBack} id=\"closeIcon\"><ImCross /></span>\n          \n            <form onSubmit={submitHandler}>\n            <Container fluid>\n              <input className=\"inputBox\" type=\"text\" placeholder=\"What would you like to add ?\" onChange={(e) => addNewTask(e)} value={newtask} />\n              </Container>\n              <Container fluid>\n              <div className=\"attachments float-right\">\n                <span className=\"attachIcons\"><ImAttachment /></span><span><ImCalendar/></span>\n              </div></Container>\n              <button className=\"addTaskBtn\">+</button>\n            </form>\n        \n        </div>\n        ) : (\n          <div className=\"App\">\n            <UserProfile taskCount={tasks.length} profile={{ name: 'Floyd Mullins' }} />\n            <TasksList status={handleStatus} tasks={tasks} />\n          </div>\n        )\n        \n      }\n        \n  </Fragment>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route,Link,Switch,BrowserRouter as Router} from \"react-router-dom\"\n\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/index.scss';\n\n\nconst routing = (\n  <Router>\n    <Switch>\n    <Route exact path=\"/\" component={App} />\n    <Route exact path=\"/:param\"><App /></Route>\n    </Switch>\n  </Router>\n)\n\nReactDOM.render(\n  routing,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}